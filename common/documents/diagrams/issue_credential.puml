```puml
@startuml
autonumber
hide footbox

skinparam legendBackgroundColor #FFFFFF
skinparam legendBorderColor #FFFFFF
legend top right
    <#FFFFFF,#FFFFFF>|<#lightgreen>     | Service Specific Area|
    |<#e6e6fa>      | Common Logic |
end legend

participant wallet
participant cred_endpoint as "credential endpoint" #lightgreen
participant common_logic1 as "CredentialIssuer"
participant servicer_logic1 as "service specific process" #lightgreen
database auth_codes #lightgreen
database auth_target as "subject" #lightgreen
database access_tokens #lightgreen
database c_nonces #lightgreen

wallet -> cred_endpoint: access token, (key binding jwt)
cred_endpoint -> common_logic1: issue
common_logic1 -> servicer_logic1: execute providing access token state
servicer_logic1 <-> access_tokens: get access token
servicer_logic1 <-> auth_codes: get auth code
alt needs proof
  servicer_logic1 <-> c_nonces: get nonce
end
servicer_logic1 --> common_logic1: access token state
note over common_logic1
  exists,
  expires_in, created_at,
  is_pre_auth_flow,
  needs_proof
  needs_to_update_c_nonce
end note
common_logic1 -> common_logic1: validate state
alt needs proof
  common_logic1 -> common_logic1: validate proof
end
alt error
  common_logic1 --> cred_endpoint: error
  cred_endpoint --> wallet: error
end
alt sd-jwt
  common_logic1 -> servicer_logic1: issue credential
  servicer_logic1 <-> auth_target: get subject data
  servicer_logic1 -> servicer_logic1: issue
  servicer_logic1 --> common_logic1: credential
else jwt-vc-json
  note over common_logic1
    to be implemented
  end note
  common_logic1 --> cred_endpoint: unsupported format error
  cred_endpoint --> wallet: error
else other
  note over common_logic1
    to be implemented ?
  end note
  common_logic1 --> cred_endpoint: unsupported format error
  cred_endpoint --> wallet: error
end
alt needs to update c_nonce
  common_logic1 -> servicer_logic1: refresh c_nonce
  servicer_logic1 <-> c_nonces: refresh
end
servicer_logic1 --> common_logic1: new nonce
common_logic1 --> cred_endpoint: credential, (nonce)
cred_endpoint --> wallet: credential response

@enduml
```
